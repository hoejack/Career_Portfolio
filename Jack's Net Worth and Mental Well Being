# Objectives of this Data Project
- To observe and analysis personal mental and financial health progress across 4 years period 2018-2022
- To determine relationship between personal mental health and financial health and other event factors in my life 
- To judge the effectiveness of personal financial strategy and to access how it influences of personal mental health 
- To conclude how does financial health affect personal mental health and what can be done in future to achieve both financial and mental health goals
- This project also serve as a portfolio for employers to access my skillset especially on Data Analytics, Google Excel & Python (Pandas & Matplotlib)


___________________________________________________________________________________________________________________________________________________________

# Import working packages to IDE

import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib as mpl
import matplotlib.dates
from datetime import datetime, date
from matplotlib import pyplot as plt
%matplotlib inline

gsheetid = "13vGwyp6um4ZnE0zxwehtKVxt9_PeRPBrgxXnhRP2KGE"
sheet_name = "Data"
gsheet_url = "https://docs.google.com/spreadsheets/d/{}/gviz/tq?tqx=out:csv&sheet={}".format(gsheetid, sheet_name)

# Check Data Reading

df = pd.read_csv(gsheet_url)
df.dropna(inplace = True)

# Converting Month to DateTime Object

df["Month"] = pd.to_datetime(df["Month"], format = "%b-%y")

# Removing comma in numeric columns and convert it into INT object

df["Assets & Equity"] = df["Assets & Equity"].replace(",", "", regex = True).astype(int)
df["Long Term Loans"] = df["Long Term Loans"].replace(",", "", regex = True).astype(int)
df["Total Net Worth"] = df["Total Net Worth"].replace(",", "", regex = True).astype(int)

# Removing % String and converting it into INT object

df["Net Worth Change (%)"] = df["Net Worth Change (%)"][1:].replace("%", "", regex = True).astype(float) / 100
df["Primary Expenses to Net Salary"] = df["Primary Expenses to Net Salary"][1:].replace("%", "", regex = True).astype(float) / 100
df["Investing Rate to Net Salary"] = df["Investing Rate to Net Salary"][1:].replace("%", "", regex = True).astype(float) / 100
df["Spending Rate to Net Salary"] = df["Spending Rate to Net Salary"][1:].replace("%", "", regex = True).astype(float) / 100

# Renaming one column to a shorter name
df.rename(columns = {"Mental Well Being (1 - Very Dissatisfied, 5 - Very Satisfied)": "Mental Well Being"}, inplace = True)

___________________________________________________________________________________________________________________________________________________________


# Setting Up Figures

plt.style.use("seaborn-pastel")
plt.rcParams["figure.figsize"] = (20, 10)
plt.rcParams['axes.titlesize'] = 30
plt.rcParams['xtick.labelsize'] = 15
plt.rcParams['ytick.labelsize'] = 15
plt.rcParams['axes.labelsize'] = 16
plt.rcParams['font.family'] = 'Arial'
plt.rcParams['font.size'] = 16
plt.rcParams['axes.titlesize'] = 35
plt.rcParams['axes.xmargin'] = 0.03

# Setting Up Variables

date = df["Month"]
net_worth = df["Total Net Worth"]
primary_exp = df["Primary Expenses to Net Salary"]
investing_rate = df["Investing Rate to Net Salary"]
spending_rate = df["Spending Rate to Net Salary"]
mental_wellbeing = df["Mental Well Being"]
avg_mental_wellbeing = df["Average Mental Well Being Past 4 Months"]

# Figure 1

fig1, ax1 = plt.subplots()
fig1.tight_layout()
fig1.patch.set_facecolor('white')
date_value = matplotlib.dates.date2num(df['Month'])

# Figure 1, AX1 Layout

color1 = 'darkgreen'
ax1.plot(date, net_worth,
        color = color1,
        linestyle = "-")
ax1.set_ylabel("Net Worth", color = color1, loc = 'bottom')
ax1.tick_params(axis = 'y', labelcolor = color1)
ax1.tick_params(axis = 'x', rotation = 90)
ax1.set_xticks(date_value)


# Figure 1, AX2 Layout

ax2 = ax1.twinx()
color2 = 'darkgoldenrod'
ax2.plot(date, avg_mental_wellbeing,
        color = color2,
        linestyle = '--',
        marker = '*')
ax2.set_ylabel("Average Mental Well Being - 4 Month Moving Average", color = color2, loc = 'top')
ax2.tick_params(axis = 'y', labelcolor = color2)
ax2.set_xticks(date_value)

# Figure 1, AX1 Texts and Description

# position
x1 = 17900
x2 = 18265
x3 = 18350
x4 = 18440
x5 = 18780
x6 = 18900
x7 = 19150
width = 20 # space between line and text

plt.title("Net Worth and Mental Well Being (4 Month Moving Average)", loc = 'center' , x = 0.35, y = 1, pad = -42, color = 'dimgray')
plt.axvline(x = x1, color = 'gainsboro', ymax = 0.65)
plt.axvline(x = x2, color = 'gainsboro', ymax = 0.80)
plt.axvline(x = x3, color = 'gainsboro', ymax = 0.80)
plt.axvline(x = x4, color = 'gainsboro', ymax = 0.85)
plt.axvline(x = x5, color = 'gainsboro', ymax = 0.85)
plt.axvline(x = x6, color = 'gainsboro', ymax = 0.90)
plt.axvline(x = x7, color = 'gainsboro', ymax = 1)

t1 = "Getting into relationship"
t2 = "Relationship breakup"
t3 = "Pandamic begins"
t4 = "Lockdown restriction lifted"
t5 = "Delta Lockdown"
t6 = "Lockdown restriction lifted"
t7 = "Moving to Japan"

ax1.text(x1 - width, 20000, t1, rotation = 90, alpha = 0.75)
ax1.text(x2 - width, 60000, t2, rotation = 90, alpha = 0.75)
ax1.text(x3 - width, 70000, t3, rotation = 90, alpha = 0.75)
ax1.text(x4 - width, 60000, t4, rotation = 90, alpha = 0.75)
ax1.text(x5 - width, 80000, t5, rotation = 90, alpha = 0.75)
ax1.text(x6 - width, 70000, t6, rotation = 90, alpha = 0.75)
ax1.text(x7 - width, 65000, t7, rotation = 90, alpha = 0.75)

# Figure 2

fig2, ax1a = plt.subplots()
fig2.patch.set_facecolor('white')

# Removing Discrepancies From "Spending Rate" Variables
# Invalid Data due to Job Change affecting Salary Rate

mark = df["Spending Rate to Net Salary"] < 0.5
new_df = df[mark]

new_investing_rate = new_df["Investing Rate to Net Salary"]
new_spending_rate = new_df["Spending Rate to Net Salary"]
new_primary_exp = new_df["Primary Expenses to Net Salary"]
new_avg_mental_wellbeing = new_df["Average Mental Well Being Past 4 Months"]
new_mental_wellbeing = new_df["Mental Well Being"]

# Setting Up Marker Size Variable

s = []
cmap = "YlGn"

for n in new_mental_wellbeing:
    if n < 3:
        n = n + 100
        s.append(n)
    else: 
        n = n ** 5.5
        s.append(n)
        
# Figure 2, AX1A Layout

ax1a.scatter(new_investing_rate, new_spending_rate, 
             s = s, c = new_mental_wellbeing, cmap = cmap,
            linewidth = 1, alpha = 0.6, edgecolor = 'black')

ax1a.set_xlabel("Investing Rate")
ax1a.set_ylabel("Spending Rate")
plt.tight_layout()

# Add Circle Patch on Data Highlights and Color Bar

circle = plt.Circle((0.20,0.32), 0.08, 
                    alpha = 0.1, 
                    fc = 'grey', ec = 'black')
ax1a.add_patch(circle)

norm = mpl.colors.Normalize(vmin = 0, vmax = 5)
cbar = fig2.colorbar(mpl.cm.ScalarMappable(norm = norm, cmap = cmap), ax = ax1a, label = "Mental Well Being (The Bigger the Happier)")

___________________________________________________________________________________________________________________________________________________________

# Additional Research 

from warnings import filterwarnings
import scipy.stats as stats
filterwarnings('ignore')

r, p = stats.pearsonr(net_worth, avg_mental_wellbeing)

graph = sns.regplot(net_worth, avg_mental_wellbeing, marker = '+')
graph.text(-50000, 5, 'r = {}, p = {}'.format(r, p))

# r = 0.713763702610269, p = 1.7826637967217292e-08
# Findings suggest strong positive relationship between net worth and average mental well being past four months

___________________________________________________________________________________________________________________________________________________________

from warnings import filterwarnings
import scipy.stats as stats
filterwarnings('ignore')
sns.set_color_codes('pastel')

r1, p1 = stats.pearsonr(new_mental_wellbeing, new_primary_exp) # Removing discrepancies
r2, p2 = stats.pearsonr(new_mental_wellbeing, new_spending_rate) # Removing discrepancies
r3, p3 = stats.pearsonr(new_mental_wellbeing, new_investing_rate) # Removing discrepancies

fig1, (cor1, cor2, cor3) = plt.subplots(nrows = 3, ncols = 1, sharex = True, figsize = (20,20), gridspec_kw={'hspace': 0})

sns.regplot(new_mental_wellbeing, new_primary_exp , marker = '+',  ax = cor1, color = "b", )
sns.regplot(new_mental_wellbeing, new_spending_rate, marker = '+',  ax = cor2, color = 'r')
sns.regplot(new_mental_wellbeing, new_investing_rate, marker = '+',  ax = cor3, color = "g")

cor1.text(1.05, 0.45, "Correlation between Primary Expenses % with Mental Well-Being")
cor1.text(1.05, 0.43, 'r = {} p = {}'.format(r1, p1))
cor2.text(1.05, 0.43, "Correlation between Spending Rate % with Mental Well-Being")
cor2.text(1.05, 0.415, 'r = {} p = {}'.format(r2, p2))
cor3.text(1.05, 0.36, "Correlation between Investing Rate % with Mental Well-Being")
cor3.text(1.05, 0.338, 'r = {} p = {}'.format(r3, p3))

cor1.set_ylabel('')
cor2.set_ylabel('')
cor3.set_ylabel('')

cor1.label_outer()
cor2.label_outer()

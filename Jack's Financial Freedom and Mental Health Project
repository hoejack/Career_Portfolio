# Objectives of this Data Project
- To observe and analysis personal mental and financial health progress across 4 years period 2018-2022
- To determine relationship between personal mental health and financial health and other event factors in my life 
- To judge the effectiveness of personal financial strategy and to access how it influences of personal mental health 
- To conclude how does financial health affect personal mental health and what can be done in future to achieve both financial and mental health goals
- This project also serve as a portfolio for employers to access my skillset especially on Data Analytics, Google Excel & Python (Pandas & Matplotlib)


___________________________________________________________________________________________________________________________________________________________

# Import working packages to IDE
import pandas as pd
import datetime
from matplotlib import pyplot as plt
%matplotlib inline

# Convert Google Sheets to CSV & Read Data with Pandas
gsheetid = "13vGwyp6um4ZnE0zxwehtKVxt9_PeRPBrgxXnhRP2KGE"
sheet_name = "Data"
gsheet_url = "https://docs.google.com/spreadsheets/d/{}/gviz/tq?tqx=out:csv&sheet={}".format(gsheetid, sheet_name)

# Check Data Reading

df = pd.read_csv(gsheet_url)
df.head(10)

# Converting Month to DateTime Object

df["Month"] = pd.to_datetime(df["Month"], format = "%b-%y")

# Removing comma in numeric columns and convert it into INT object

df["Assets & Equity"] = df["Assets & Equity"].replace(",", "", regex = True).astype(int)
df["Long Term Loans"] = df["Long Term Loans"].replace(",", "", regex = True).astype(int)
df["Total Net Worth"] = df["Total Net Worth"].replace(",", "", regex = True).astype(int)

# Removing % String and converting it into INT object

df["Net Worth Change (%)"] = df["Net Worth Change (%)"][1:].replace("%", "", regex = True).astype(float) / 100
df["Primary Expenses to Net Salary"] = df["Primary Expenses to Net Salary"][1:].replace("%", "", regex = True).astype(float) / 100
df["Investing Rate to Net Salary"] = df["Investing Rate to Net Salary"][1:].replace("%", "", regex = True).astype(float) / 100
df["Spending Rate to Net Salary"] = df["Spending Rate to Net Salary"][1:].replace("%", "", regex = True).astype(float) / 100

# Renaming one column to a shorter name
df.rename(columns = {"Mental Health (1 - Very Dissatisfied, 5 - Very Satisfied)": "Mental Health"}, inplace = True)

___________________________________________________________________________________________________________________________________________________________

# Setting Up Figures

plt.style.use("seaborn-pastel")
plt.rcParams["figure.figsize"] = (20, 10)
plt.rcParams['axes.titlesize'] = 30
plt.rcParams['xtick.labelsize'] = 15
plt.rcParams['ytick.labelsize'] = 15
plt.rcParams['axes.labelsize'] = 16
plt.rcParams['font.family'] = 'Arial'
plt.rcParams['axes.titlesize'] = 35
plt.rcParams['axes.xmargin'] = 0.03

# Setting Up Variables

date = df["Month"]
net_worth = df["Total Net Worth"]
primary_exp = df["Primary Expenses to Net Salary"]
investing_rate = df["Investing Rate to Net Salary"]
spending_rate = df["Spending Rate to Net Salary"]
mental_health = df["Mental Health"]
avg_mental_health = df["Average Mental Health Past 4 Weeks"]

# Figure 1

fig1, ax1 = plt.subplots()
fig.tight_layout()
# x_indexes = np.arange(len(date))

# Figure 1, AX1 Layout

color1 = 'darkgreen'
ax1.plot(date, net_worth,
        color = color1,
        linestyle = "-")
ax1.set_ylabel("Net Worth", color = color1, loc = 'bottom')
ax1.tick_params(axis = 'y', labelcolor = color1)
# ax1.set_xticks(x_indexes)
# ax1.set_xticklabels(date_list)

# Figure 1, AX2 Layout

ax2 = ax1.twinx()
color2 = 'darkgoldenrod'
ax2.plot(date, avg_mental_health,
        color = color2,
        linestyle = '--',
        marker = '*')
ax2.set_ylabel("Average Mental Health Past Four Weeks", color = color2, loc = 'top')
ax2.tick_params(axis = 'y', labelcolor = color2)

plt.title("Net Worth and Happiness", loc = 'center' , x = 0.19, y = 1, pad = -42, color = 'dimgray')
plt.axvline(x = 17900, color = 'gainsboro', ymax = 0.65)
plt.axvline(x = 18265, color = 'gainsboro', ymax = 0.65)
plt.axvline(x = 18350, color = 'gainsboro', ymax = 0.70)
plt.axvline(x = 18440, color = 'gainsboro', ymax = 0.80)
plt.axvline(x = 18780, color = 'gainsboro', ymax = 0.85)
plt.axvline(x = 18900, color = 'gainsboro', ymax = 0.90)
plt.axvline(x = 19150, color = 'gainsboro', ymax = 1)

# Figure 2

fig2, ax1a = plt.subplots()
plt.rcParams["figure.figsize"] = (20, 10)

# Removing Discrepancies From "Spending Rate" Variables
# Invalid Data due to Job Change affecting Salary Rate

mark = df["Spending Rate to Net Salary"] < 0.5
new_df = df[mark]

investing_rate = new_df["Investing Rate to Net Salary"]
spending_rate = new_df["Spending Rate to Net Salary"]
mental_health = new_df["Mental Health"]

# Setting Up Marker Size Variable

s = []

for n in mental_health:
    if n < 3:
        n = n + 100
        s.append(n)
    else: 
        n = n ** 5.5
        s.append(n)
        
# Figure 2, AX1A Layout

ax1a.scatter(investing_rate, spending_rate, 
             s = s, c = mental_health, cmap = "YlGn",
            linewidth = 1, alpha = 0.6, edgecolor = 'black')
ax1a.set_xlabel("Spending Rate")
ax1a.set_ylabel("Investing Rate")
plt.tight_layout()



